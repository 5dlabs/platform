---
# Argo CD Application for Zalando Postgres Operator
# Manages PostgreSQL clusters on Kubernetes powered by Patroni
# Source: https://github.com/zalando/postgres-operator

apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: postgres-operator
  namespace: argocd
  labels:
    app.kubernetes.io/name: postgres-operator
    app.kubernetes.io/part-of: platform
    app.kubernetes.io/component: database
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  # Project configuration
  project: platform

  # Source configuration - Using Zalando's Helm chart
  source:
    repoURL: https://opensource.zalando.com/postgres-operator/charts/postgres-operator
    chart: postgres-operator
    targetRevision: 1.14.0  # Latest stable version
    helm:
      values: |
        # Operator configuration
        configGeneral:
          # Enable CRD ownership to prevent accidental deletion
          enable_crd_registration: true
          # Resync period for clusters
          resync_period: "30m"
          # Set repair period
          repair_period: "5m"

        # Resource configuration
        configKubernetes:
          # Watch all namespaces by default
          watched_namespace: "*"
          # Pod service account
          pod_service_account_name: "postgres-pod"
          # Enable pod antiaffinity by default
          enable_pod_antiaffinity: true
          # Enable cross namespace secret access
          enable_cross_namespace_secret: false

        # PostgreSQL pod configuration
        configPostgresPodResources:
          # Default CPU and memory resources for Postgres pods
          default_cpu_request: "100m"
          default_memory_request: "100Mi"
          default_cpu_limit: "1"
          default_memory_limit: "500Mi"

          # Min resource boundaries (max limits removed due to schema incompatibility)
          min_cpu_limit: "250m"
          min_memory_limit: "250Mi"

        # Teams API configuration (disabled by default)
        configTeamsApi:
          enable_teams_api: false

        # Logging configuration
        configLoggingRestApi:
          api_port: 8080
          cluster_history_entries: 1000
          ring_log_lines: 100

        # Connection pooler configuration
        configConnectionPooler:
          # Enable PgBouncer connection pooling
          connection_pooler_image: "registry.opensource.zalan.do/acid/pgbouncer:master-32"
          connection_pooler_default_cpu_request: "100m"
          connection_pooler_default_memory_request: "100Mi"
          connection_pooler_default_cpu_limit: "500m"
          connection_pooler_default_memory_limit: "200Mi"

        # Operator resources
        resources:
          requests:
            cpu: 100m
            memory: 250Mi
          limits:
            cpu: 500m
            memory: 500Mi

        # Service monitor for Prometheus integration
        serviceMonitor:
          enabled: false  # Enable if using Prometheus

        # Postgres Operator UI (optional, disabled by default)
        enableUI: false

  # Destination configuration
  destination:
    server: https://kubernetes.default.svc
    namespace: postgres-operator

  # Sync policy
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false

    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true  # Use server-side apply for CRDs
      - PrunePropagationPolicy=foreground
      - RespectIgnoreDifferences=true

    retry:
      limit: 5
      backoff:
        duration: 10s
        factor: 2
        maxDuration: 3m

  # Ignore certain differences in CRDs
  ignoreDifferences:
    - group: apiextensions.k8s.io
      kind: CustomResourceDefinition
      jsonPointers:
        - /spec/conversion
        - /spec/preserveUnknownFields

  # Revision history
  revisionHistoryLimit: 5

---
# Argo CD Application for Toolman
# Manages the Toolman service via GitOps

apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: toolman
  namespace: argocd
  labels:
    app.kubernetes.io/name: toolman
    app.kubernetes.io/part-of: platform
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  # Project configuration
  project: platform

  # Source configuration - use official ToolMan chart
  source:
    repoURL: https://github.com/5dlabs/toolman
    targetRevision: main
    path: charts/toolman
    # Helm configuration
    helm:
      values: |
        # Enable debug logging and environment variables
        env:
          - name: PORT
            value: "3000"
          - name: PROJECT_DIR
            value: "/config"
          - name: RUST_LOG
            value: "trace,kube=debug,toolman=trace"
        
        # Set working directory to writable location (not read-only config mount)
        workingDir: "/tmp"
        
        # Use latest image with local tools ConfigMap support
        image:
          tag: "1.0.5"

        # Resource configuration
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 128Mi

        # Persistence configuration
        persistence:
          enabled: true
          storageClassName: "local-path"
          size: "10Gi"

        # Service account
        serviceAccount:
          create: true
          name: toolman

        # Complete server configuration with working directories and local tools
        config:
          servers:
            brave-search:
              workingDirectory: "/tmp"
            memory:
              workingDirectory: "/tmp"
            terraform:
              workingDirectory: "/tmp"
            kubernetes:
              workingDirectory: "/tmp"
            solana:
              workingDirectory: "/tmp"
            rustdocs:
              workingDirectory: "/tmp"
            reddit:
              workingDirectory: "/tmp"
            postgres:
              name: "PostgreSQL"
              description: "PostgreSQL database management and querying"
              transport: "stdio"
              command: "uv"
              args: ["run", "postgres-mcp", "--access-mode=unrestricted"]
              workingDirectory: "/tmp"
              env:
                DATABASE_URI: "postgresql://rustdocs:rustdocs123@rustdocs-mcp-postgresql.mcp.svc.cluster.local:5432/postgres"

        # Local tools configuration for client-side operations
        localTools:
          servers:
            filesystem:
              name: "Filesystem"
              description: "File system operations for reading, writing, and managing files"
              transport: "stdio"
              command: "npx"
              args: ["-y", "@modelcontextprotocol/server-filesystem", "/tmp"]
              workingDirectory: "/tmp"
        
        # Secret store integration (External Secrets will inject these)
        secretRefs:
          - name: toolman-brave-search-secrets
          - name: toolman-reddit-secrets

        # Security context (explicit configuration)
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: [ALL]
          readOnlyRootFilesystem: true
          runAsGroup: 2375
          runAsNonRoot: true
          runAsUser: 1001
        
        # Ensure service account token is mounted for Kubernetes API access
        automountServiceAccountToken: true
  # Destination configuration
  destination:
    server: https://kubernetes.default.svc
    namespace: agent-platform

  # Sync policy
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false

    syncOptions:
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground

    retry:
      limit: 3
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 2m

  # Revision history
  revisionHistoryLimit: 5
